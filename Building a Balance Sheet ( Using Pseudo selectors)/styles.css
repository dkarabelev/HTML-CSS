html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

/* !important keyword to ensure these properties are always applied, regardless of order or*/
span[class~="sr-only"] {  /* This selector select any span element whose clase includes sr-only */
    border: 0;
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
    white-space: nowrap !important;
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
    border:  0 !important;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex {  /* Target flex container with this selector */
    display: flex;
    flex-direction: column-reverse; /* This will display the nested element from Bottom to Top*/
    gap: 1rem;

}

/* Span elements are reversed, visually, so this will appear to be the second element on the page */
h1 .flex span:first-of-type { /* Target the first Span element in our .flex container.*/
    font-size: 0.7em;
}

/* The :last-of-type pseudo-selector does the exact opposite - It targets the last element that matches the selector*/
h1 .flex span:last-of-type { /* Target the last Span in the Flex container */
    font-size: 1.2em;
}

section {
    max-width: 40rem; /* For responsive design */
    margin: 0 auto; /* Center it */
    border: 2px solid #d0d0d5;
}

#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    top: 0;
    color: #fff;
    background-color: #0a0a23;
    margin: 0 -2px;
    padding: 0.5rem calc(1.25rem + 2px ) 0.5rem 0; /* The calc() function allows to calculate a value based on other values*/
    z-index: 999; /* To ensure that #years element does not get hidden by different stacks*/
}

#years span[class] { /* The span[class] syntax will target any span element that has a Class attribute set, regardless of the attribute's value.*/
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/* The :not() pseudo-selector is used to target all element that do not match the selector 
span {  In this case any of my Span elements that do not have the sr-only class
    font-weight: normal;

} */

table {
    border-collapse: collapse; /* This will allow cell borders to collapse into a single border, instead of a border around each cell */
    border: 0; /* To hide the borders themselves */
    width: 100%;
    margin-top: 3rem;
    position: relative;
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}


tbody td {
    width: 100vw;
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);

}

/* [attribute="value" selecotr targets any element that has an attribute with a specific value */
tr[class="total"] { /* This selector targets specifically Tr elements with the Total class */
    border-bottom: 4px double #0a0a23;
    font-weight: bold;
}

tr[class="total"] th {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td {
    text-align: right;
    padding: 0 0.25rem;
}

tr.total td:nth-of-type(3) {
    padding: 0.5rem;
}

tr.total:hover {
     background: #99c9ff;
}

td[class="current"] {
    font-style: italic;
}

tr[class="data"] {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th{
    text-align: left;
    padding: 0.3rem;
    padding-left: 0.5rem;
}

/* This selector target the elements with the Class set to Description that are within th elements in .data table rows */
tr.data th .description { 
    display: block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    text-align: right;
    padding: 0.3rem 0.25rem 0;
}

tr.data td:last-of-type { /* Specifically select the last one, that's why it's Last-Of-Type*/
    padding: 0.5rem;
}